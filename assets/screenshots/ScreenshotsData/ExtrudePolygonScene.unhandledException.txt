terminate called after throwing an instance of 'std::runtime_error'
  what():  The colors element count (72) does not match the positions count (96)
Stack trace (most recent call last):
#26   Object "", at 0xffffffffffffffff, in 
#25   Object "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/build/bin/BabylonStudio", at 0x409069, in _start
#24   Source "/build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c", line 310, in __libc_start_main [0x7f5ebc9f9b96]
#23   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonStudio/main.cpp", line 62, in main [0x40e1fc]
         59:   };
         60: #endif
         61: 
      >  62:   runBabylonStudio(scene, options);
         63:   return 0;
         64: }
#22   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonImGui/src/babylon_imgui/babylon_studio.cpp", line 405, in BABYLON::runBabylonStudio(std::shared_ptr<BABYLON::IRenderableScene> const&, BABYLON::BabylonStudioOptions) [0x7f5ec0576c8c]
        402: #endif
        403:   std::shared_ptr<BABYLON::IRenderableScene> sceneNotNull =
        404:     scene ? scene : std::make_shared<EmptyScene>();
      > 405:   app.RunApp(sceneNotNull, options);
        406: }
        407: 
        408: } // namespace BABYLON
#21   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonImGui/src/babylon_imgui/babylon_studio.cpp", line 78, in BABYLON::BabylonStudioApp::RunApp(std::shared_ptr<BABYLON::IRenderableScene> const&, BABYLON::BabylonStudioOptions const&) [0x7f5ec0577769]
         75:     _appContext._options._appWindowParams.InitialDockLayoutFunction = [this](ImGuiID mainDockId) {
         76:       _studioLayout.PrepareLayout(mainDockId);
         77:     };
      >  78:     ImGuiUtils::ImGuiRunner::InvokeRunnerBabylon(
         79:       _appContext._options._appWindowParams,
         80:       showGuiLambda,
         81:       initSceneLambda
#20   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/imgui_utils/imgui_runner_babylon/runner_babylon.cpp", line 284, in ImGuiUtils::ImGuiRunner::InvokeRunnerBabylon(ImGuiUtils::ImGuiRunner::AppWindowParams const&, std::function<bool ()>, std::function<void ()>) [0x7f5ec05ba4f5]
        281: #ifdef EMSCRIPTEN
        282:   InvokeRunnerBabylonEmscripten(appWindowParams, guiFunctionWithExit, postInitFunction);
        283: #elif defined(IMGUI_RUNNER_USE_SDL)
      > 284:   InvokeRunnerBabylonSdl(appWindowParams, guiFunctionWithExit, postInitFunction);
        285: #elif defined(IMGUI_RUNNER_USE_GLFW)
        286:   InvokeRunnerBabylonGlfw(appWindowParams, guiFunctionWithExit, postInitFunction);
        287: #else
#19 | Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/imgui_utils/imgui_runner_babylon/runner_babylon.cpp", line 252, in ImGuiUtils::ImGuiRunner::InvokeRunnerBabylonSdl(ImGuiUtils::ImGuiRunner::AppWindowParams const&, std::function<bool ()>, std::function<void ()>)
    |   250:     postInitFunction
    |   251:   );
    | > 252:   runner_babylon.Run();
    |   253:   BABYLON::asio::Service_Stop();
    |   254: }
      Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/imgui_utils/imgui_runner_babylon/runner_babylon.cpp", line 215, in ImGuiUtils::ImGuiRunner::InvokeRunnerBabylonSdl(ImGuiUtils::ImGuiRunner::AppWindowParams const&, std::function<bool ()>, std::function<void ()>) [0x7f5ec05ba258]
        213: void RunnerBabylon::Run()
        214: {
      > 215:   mAbstractRunner->Run();
        216: }
        217: 
        218: void RunnerBabylon::ResetDockLayout()
#18   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/imgui_utils/imgui_runner/abstract_runner.cpp", line 194, in ImGui::ImGuiRunner::AbstractRunner::Run() [0x7f5ec05e8447]
        191: {
        192:   FullInit();
        193:   while(!mExitRequired)
      > 194:     LoopProc();
        195:   Cleanup();
        196: }
#17 | Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/imgui_utils/imgui_runner/abstract_runner.cpp", line 176, in ImGui::ImGuiRunner::AbstractRunner::LoopProc()
    |   174:   ImGui::NewFrame();
    |   175: 
    | > 176:   bool exitRequired = ShowGui();
    |   177:   if (exitRequired)
    |   178:     mExitRequired = true;
      Source "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/std_function.h", line 706, in ImGui::ImGuiRunner::AbstractRunner::LoopProc() [0x7f5ec05e83ce]
        703:     {
        704:       if (_M_empty())
        705: 	__throw_bad_function_call();
      > 706:       return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
        707:     }
        708: 
        709: #if __cpp_rtti
#16 | Source "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/std_function.h", line 301, in std::_Function_handler<bool (), ImGuiUtils::ImGuiRunner::RunnerBabylon::DoInit()::$_2>::_M_invoke(std::_Any_data const&)
    |   299:       _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    |   300:       {
    | > 301: 	return (*_Base::_M_get_pointer(__functor))(
    |   302: 	    std::forward<_ArgTypes>(__args)...);
    |   303:       }
    | Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/imgui_utils/imgui_runner_babylon/runner_babylon.cpp", line 199, in ImGuiUtils::ImGuiRunner::RunnerBabylon::DoInit()::$_2::operator()() const
    |   197:     {
    |   198:       postInited = true;
    | > 199:       postInit();
    |   200:     }
    |   201:     provideWindowOrDock();
      Source "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/std_function.h", line 706, in std::_Function_handler<bool (), ImGuiUtils::ImGuiRunner::RunnerBabylon::DoInit()::$_2>::_M_invoke(std::_Any_data const&) [0x7f5ec05ba7d7]
        703:     {
        704:       if (_M_empty())
        705: 	__throw_bad_function_call();
      > 706:       return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
        707:     }
        708: 
        709: #if __cpp_rtti
#15 | Source "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/std_function.h", line 316, in std::_Function_handler<void (), ImGuiUtils::ImGuiRunner::RunnerBabylon::DoInit()::$_0>::_M_invoke(std::_Any_data const&)
    |   314:       _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    |   315:       {
    | > 316: 	(*_Base::_M_get_pointer(__functor))(
    |   317: 	    std::forward<_ArgTypes>(__args)...);
    |   318:       }
    | Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/imgui_utils/imgui_runner_babylon/runner_babylon.cpp", line 171, in ImGuiUtils::ImGuiRunner::RunnerBabylon::DoInit()::$_0::operator()() const
    |   169:     if (mAppWindowParams.DefaultWindowType == DefaultWindowTypeOption::ProvideFullScreenDockSpace)
    |   170:       ImGui::GetIO().ConfigFlags = ImGui::GetIO().ConfigFlags | ImGuiConfigFlags_DockingEnable;
    | > 171:     mPostInitFunction();
    |   172:     ImGui::GetIO().ConfigWindowsMoveFromTitleBarOnly = mAppWindowParams.ConfigWindowsMoveFromTitleBarOnly;
    |   173:   };
      Source "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/std_function.h", line 706, in std::_Function_handler<void (), ImGuiUtils::ImGuiRunner::RunnerBabylon::DoInit()::$_0>::_M_invoke(std::_Any_data const&) [0x7f5ec05ba613]
        703:     {
        704:       if (_M_empty())
        705: 	__throw_bad_function_call();
      > 706:       return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
        707:     }
        708: 
        709: #if __cpp_rtti
#14   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonImGui/src/babylon_imgui/babylon_studio.cpp", line 72, in operator() [0x7f5ec057a62b]
         70:     auto initSceneLambda = [=]() {
         71:       this->initScene();
      >  72:       this->setRenderableScene(initialScene);
         73:     };
         74: 
         75:     _appContext._options._appWindowParams.InitialDockLayoutFunction = [this](ImGuiID mainDockId) {
#13   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonImGui/src/babylon_imgui/babylon_studio.cpp", line 235, in BABYLON::BabylonStudioApp::setRenderableScene(std::shared_ptr<BABYLON::IRenderableScene>) [0x7f5ec0578e72]
        232:   {
        233:     if (_appContext._inspector)
        234:       _appContext._inspector->setScene(nullptr);
      > 235:     _appContext._sceneWidget->setRenderableScene(scene);
        236:     if (_appContext._inspector)
        237:       _appContext._inspector->setScene(_appContext._sceneWidget->getScene());
        238:   }
#12   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonCpp/src/interfaces/irenderable_scene.cpp", line 38, in BABYLON::IRenderableScene::initialize(BABYLON::ICanvas*) [0x7f5ebfd19361]
         35:   // Set the render function
         36:   _renderFunction = [=]() { _scene->render(); };
         37:   // Initialize the scene
      >  38:   initializeScene(_canvas, _scene.get());
         39:   _initialized = true;
         40: }
#11   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/Samples/src/samples/meshes/extrude_polygon_scene.cpp", line 939, in BABYLON::Samples::ExtrudePolygonScene::initializeScene(BABYLON::ICanvas*, BABYLON::Scene*) [0x7f5ebf43ec37]
        936:     doormat->diffuseColor = Color3(82.f / 255.f, 172.f / 255.f, 106.f / 255.f);
        937: 
        938:     // Front door
      > 939:     _frontDoor               = doorMaker(1.f, 2.25f, 0.1f);
        940:     _frontDoor->position().x = -0.5f;
        941:     _frontDoor->position().y = -3.f;
        942:     _frontDoor->position().z = 0.1f;
#10   Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/Samples/src/samples/meshes/extrude_polygon_scene.cpp", line 932, in operator() [0x7f5ebf44826e]
        929:       panelT->position().y = 2.f * edgeThickness + panelBotHeight + panelTopHeight / 2.f;
        930:       panelT->position().z = depth / 2.f;
        931: 
      > 932:       return Mesh::MergeMeshes({door, panelB, panelT}, true);
        933:     };
        934: 
        935:     auto doormat          = StandardMaterial::New("door", scene);
#9    Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonCpp/src/meshes/mesh.cpp", line 3599, in BABYLON::Mesh::MergeMeshes(std::vector<std::shared_ptr<BABYLON::Mesh>, std::allocator<std::shared_ptr<BABYLON::Mesh> > > const&, bool, bool, std::shared_ptr<BABYLON::Mesh>, bool, bool) [0x7f5ebff49440]
       3596:       otherVertexData->transform(wm);
       3597: 
       3598:       if (vertexData) {
      >3599:         vertexData->merge(*otherVertexData, allow32BitsIndices);
       3600:       }
       3601:       else {
       3602:         vertexData = std::move(otherVertexData);
#8    Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonCpp/src/meshes/vertex_data.cpp", line 295, in BABYLON::VertexData::merge(BABYLON::VertexData&, bool) [0x7f5ebff70ba8]
        293: VertexData& VertexData::merge(VertexData& other, bool /*use32BitsIndices*/)
        294: {
      > 295:   _validate();
        296:   other._validate();
        297: 
        298:   if (!other.indices.empty()) {
#7    Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonCpp/src/meshes/vertex_data.cpp", line 392, in BABYLON::VertexData::_validate() [0x7f5ebff71474]
        389:     validateElementCount(VertexBuffer::UV6Kind, uvs6);
        390:   }
        391:   if (!colors.empty()) {
      > 392:     validateElementCount(VertexBuffer::ColorKind, colors);
        393:   }
        394:   if (!matricesIndices.empty()) {
        395:     validateElementCount(VertexBuffer::MatricesIndicesKind, matricesIndices);
#6    Source "/home/pascal/dvp/BabylonCpp/cmake-build-relwithdebinfo/../src/BabylonCpp/src/meshes/vertex_data.cpp", line 361, in operator() [0x7f5ebff71f67]
        358:   const auto validateElementCount = [&](const std::string& kind, const Float32Array& values) {
        359:     const auto elementCount = getElementCount(kind, values);
        360:     if (elementCount != positionsElementCount) {
      > 361:       throw std::runtime_error("The " + kind + "s element count (" + std::to_string(elementCount)
        362:                                + ") does not match the positions count ("
        363:                                + std::to_string(positionsElementCount) + ")");
        364:     }
#5    Object "/usr/lib/x86_64-linux-gnu/libstdc++.so.6", at 0x7f5ebd292d23, in __cxa_throw
#4    Object "/usr/lib/x86_64-linux-gnu/libstdc++.so.6", at 0x7f5ebd292af0, in std::terminate()
#3    Object "/usr/lib/x86_64-linux-gnu/libstdc++.so.6", at 0x7f5ebd292ab5, in std::rethrow_exception(std::__exception_ptr::exception_ptr)
#2    Object "/usr/lib/x86_64-linux-gnu/libstdc++.so.6", at 0x7f5ebd28c956, in 
#1    Source "/build/glibc-OTsEL5/glibc-2.27/stdlib/abort.c", line 79, in __GI_abort [0x7f5ebca18800]
#0    Source "/build/glibc-OTsEL5/glibc-2.27/signal/../sysdeps/unix/sysv/linux/raise.c", line 51, in __GI_raise [0x7f5ebca16e97]
Aborted (Signal sent by tkill() 25350 1000)
